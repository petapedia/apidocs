openapi: 3.0.3
info:
  title: Dokumen API Peta Pedia
  description: >-
    API Akses Petapedia dengan menggunakan token WhatsAuth
  termsOfService: https://github.com/jscroot/examples/tree/main/api/swagger
  contact:
    email: awangga@gmail.com
  license:
    name: Peda Package
    url: https://pkg.go.dev/github.com/petapedia/peda
  version: 1.0.11
externalDocs:
  description: Repo GCF
  url: https://petapedia.github.io/gcf/
servers:
  - url: https://asia-southeast2-awangga.cloudfunctions.net/petabackend
tags:
  - name: data
    description: Data Geo Spasial
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://petapedia.github.io/gcf/get/
  - name: auth
    description: Auth to Access to API
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://petapedia.github.io/gcf/post/
  - name: user
    description: Get Token and Authorize
paths:
  /data/gis/lokasi:
    post:
      tags:
        - data
      summary: Get Data Region
      description: Desa/Kelurahan Kecamatan Kabupaten Provinsi
      security:
        - token: []
      operationId: getGeoJSON
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LongLat'
            example:
              long: 107.5758500037501
              lat: -6.874720427234501
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataRegionResponse'
        '400':
          description: Invalid status value
  /data/gis/jalan:
    post:
      tags:
        - data
      summary: Get Data Roads
      description: Mendapatkan jalan di sekitar titik
      security:
        - token: []
      operationId: getGeoJSON
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LongLat'
            example:
              long: 107.5758500037501
              lat: -6.874720427234501
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Roads'
        '400':
          description: Invalid status value
  /data/geojson/jalan:
    post:
      tags:
        - data
      summary: Get Data Roads
      description: Mendapatkan jalan di sekitar titik format GeoJSON.io
      security:
        - token: []
      operationId: getGeoJSON
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LongLat'
            example:
              long: 107.5758500037501
              lat: -6.874720427234501
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Roads'
        '400':
          description: Invalid status value
  /data/geojson/jalandalamlokasi:
    post:
      tags:
        - data
      summary: Get Data Roads
      description: Mendapatkan jalan di dalam kelurahan sekitar titik format GeoJSON.io
      security:
        - token: []
      operationId: getGeoJSON
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LongLat'
            example:
              long: 107.5758500037501
              lat: -6.874720427234501
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Roads'
        '400':
          description: Invalid status value
  /petapedia-post:
    post:
      tags:
        - auth
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /geoquery:
    post:
      tags:
        - auth
      summary: Get Lokasi dari titik kordinat
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
components:
  schemas:
    Roads:
      type: object
      properties:
        _id:
          type: string
          format: objectId
          description: Unique identifier of the feature
        type:
          type: string
          example: "Feature"
        geometry:
          $ref: '#/components/schemas/Geometry'
        properties:
          $ref: '#/components/schemas/Properties'
    Geometry:
      type: object
      properties:
        type:
          type: string
          example: "LineString"
        coordinates:
          type: array
          items:
            type: array
            items:
              type: number
              format: float
            minItems: 2
            maxItems: 2
          description: Array of [longitude, latitude] coordinate pairs
    Properties:
      type: object
      properties:
        osm_id:
          type: integer
          description: OSM ID of the feature
          example: 182556785
        name:
          type: string
          description: Name of the feature
          example: "Jalan Lintas Selatan"
        highway:
          type: string
          description: Type of highway
          example: "secondary"
    DataRegionResponse:
      type: object
      properties:
        _id:
          type: string
          description: "Unique identifier of the region"
          example: "63953e66f1e587f3f9b30ab2"
        province:
          type: string
          description: "Name of the province"
          example: "JAWA BARAT"
        district:
          type: string
          description: "Name of the district"
          example: "KOTA BANDUNG"
        sub_district:
          type: string
          description: "Name of the sub-district"
          example: "SUKASARI"
        village:
          type: string
          description: "Name of the village"
          example: "SARIJADI"
        border:
          type: object
          properties:
            type:
              type: string
              description: "Type of the geographical shape"
              example: "Polygon"
            coordinates:
              type: array
              description: "Coordinates of the polygon points"
              items:
                type: array
                items:
                  type: number
                  format: float
                  description: "Longitude and latitude coordinate"
                example: [107.582, -6.8683]
    LongLat:
      type: object
      properties:
        long:
          type: number
          format: float
          description: "Longitude coordinate"
        lat:
          type: number
          format: float
          description: "Latitude coordinate"
      required:
        - long
        - lat
      example:
        long: 107.5758500037501
        lat: -6.874720427234501
    Peta:
      type: object
      properties:
        type:
          type: string
        geometry:
          type: object
          properties:
            type: 
              type: string
            coordinates: 
              type: array
        properties:
          type: object
          properties:
            name:
              type: string
    Auth:
      type: object
      properties:
        username:
          type: string
          example: petped
        password:
          type: string
          example: secret
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: fehguy
        token:
          type: string
          example: fehguy
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    token:
      type: apiKey
      name: Login
      in: header
